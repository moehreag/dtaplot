apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'

jar {
    manifest {
        attributes 'Main-Class': 'io.github.moehreag.dtaplot.gui.imgui.ImGuiEntrypoint'
    }
}

ext {
    lwjglVersion = '3.3.3'
    imguiVersion = '1.86.11'
}

dependencies {
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    ['', '-opengl', '-glfw'].each {
        implementation "org.lwjgl:lwjgl$it:$lwjglVersion"
        implementation "org.lwjgl:lwjgl$it::natives-windows"
        implementation "org.lwjgl:lwjgl$it::natives-linux"
    }

    implementation "io.github.spair:imgui-java-binding:$imguiVersion"
    implementation "io.github.spair:imgui-java-lwjgl3:$imguiVersion"

    implementation "io.github.spair:imgui-java-natives-windows-ft:$imguiVersion"
    implementation "io.github.spair:imgui-java-natives-linux-ft:$imguiVersion"
    compileOnly project(":common")
}

tasks.withType(JavaCompile).configureEach {
    source(project(":common").sourceSets.main.allSource)
}
tasks.withType(Javadoc).configureEach {
    source(project(":common").sourceSets.main.allJava)
}
tasks.named("sourcesJar", Jar) {
    from(project(":common").sourceSets.main.allSource)
}
processResources {
    from project(":common").sourceSets.main.resources
}

tasks.build.dependsOn shadowJar

shadowJar {
    archiveClassifier.set("")
    mergeServiceFiles()

    from ('LICENSE') {
        rename '^(LICENSE.*?)(\\..*)?$', "\$1_${base.archivesName.get()}\$2"
    }
}